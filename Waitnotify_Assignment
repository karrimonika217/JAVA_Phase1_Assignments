package Waitnotify_Assignment;

     class Customer {
	 int amount=10000;
	 synchronized void withdraw(int amount){
		 System.out.println("withdrawing---");
		 if(this.amount<amount){
			 System.out.println("low balance,wait for deposit");
			 try{
				 wait();
			 } 
			 catch(Exception e){
			 }
		
       }
		 this.amount-=amount;
		 System.out.println("withdrawing money is completed,remaining balance "+this.amount);
    }
	 synchronized void deposite(int amount){
	    System.out.println("going to deposite");{
		this.amount+=amount;
		System.out.println("deposite completed"+this.amount);
		notify();
		 }
	 }
  public class Waitnotify_Assignment {
	 public void main(String args[]){
		 final Customer c=new Customer();
		 new Thread(){
			 public void run(){
				 c.withdraw(5000);
			 }
		 }.start();
		 new Thread(){
			public void run(){
				c.withdraw(4000);
			}
		 }.start();
		 new Thread(){
			public void run(){
				c.withdraw(10000);
			}
		 }.start();
		 new Thread(){
			public void run(){
				c.withdraw(20000);
			}
		 }.start();
}}}
