package Threads_Assignment;
	class X1{
	synchronized public void factorial(int num){
		int m=1;
		for (int i=1;i<=num;i++){
			m=m*i;
		}
		System.out.println("factorial is"+num+":-"+m);
		try{
			Thread.sleep(400);
		}
		catch(Exception e){
			System.out.println(e);
		}
		try{
			Thread.sleep(400);
		}catch (Exception e){
			System.out.println(e);
		}
		
	}

}
class Thread1 extends Thread{
	X1 X1;
	Thread1(X1 X1){
		this.X1=X1;
	}
	public void run(){
		System.out.println("Thread1 run()method");
		X1.factorial(4);
	}
}
		
		
class Thread2 extends Thread{
	X1 X1;
	Thread2(X1 X1){
		this.X1=X1;	
	}
	public void run(){
		System.out.println("Thread2 run()method");
		X1.factorial(6);
	}	
}
class X2{
	synchronized public void Addtwonumbers(int num1,int num2){
		System.out.println("addition of two numbers"+(num1+num2));
		
	}
	
}
class Thread3 extends Thread{
	X2 X2;
	Thread3(X2 X2){
		this.X2=X2;
	}
	public void run(){
		System.out.println("Thread3 run() method");
		X2.Addtwonumbers(4,6);
	}
}
class Thread4 extends Thread{
	X2 X2;
	Thread4(X2 X2){
		this.X2 = X2;
	}
	public void run(){
		System.out.println("Thread4 run() method)");
		X2.Addtwonumbers(20, 10);
	}
}
public class Synchronized_Assignment{
	public static void main(String[] args){
		X1 ob1=new X1();
		Thread1 t1 = new Thread1(ob1);
		Thread2 t2 = new Thread2(ob1);
		
		X2 ob2 = new X2();
		Thread3 t3 = new Thread3(ob2);
		Thread4 t4 = new Thread4(ob2);
		t2.start();
		t4.start();
		t1.start();
		t3.start();
		
	}
}


